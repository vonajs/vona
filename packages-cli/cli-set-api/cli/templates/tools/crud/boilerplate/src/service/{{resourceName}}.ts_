import type { TableIdentity } from 'table-identity';
import type { IQueryParams } from 'vona-module-a-orm';
import type { Dto<%=argv.resourceNameCapitalize%>Create } from '../dto/<%=argv.resourceName%>Create.ts';
import type { Dto<%=argv.resourceNameCapitalize%>QueryRes } from '../dto/<%=argv.resourceName%>QueryRes.ts';
import type { Dto<%=argv.resourceNameCapitalize%>Update } from '../dto/<%=argv.resourceName%>Update.ts';
import type { Entity<%=argv.resourceNameCapitalize%> } from '../entity/<%=argv.resourceName%>.ts';
import type { Model<%=argv.resourceNameCapitalize%> } from '../model/<%=argv.resourceName%>.ts';
import { BeanBase } from 'vona';
import { Service } from 'vona-module-a-bean';

@Service()
export class Service<%=argv.resourceNameCapitalize%> extends BeanBase {
  async create(<%=argv.resourceName%>: Dto<%=argv.resourceNameCapitalize%>Create): Promise<Entity<%=argv.resourceNameCapitalize%>> {
    return await this.scope.model.<%=argv.resourceName%>.insert(<%=argv.resourceName%>);
  }

  async findMany(params: IQueryParams<Model<%=argv.resourceNameCapitalize%>>): Promise<Dto<%=argv.resourceNameCapitalize%>QueryRes> {
    return await this.scope.model.<%=argv.resourceName%>.selectAndCount({
      ...params,
    });
  }

  async findOne(id: TableIdentity): Promise<Entity<%=argv.resourceNameCapitalize%> | undefined> {
    return await this.scope.model.<%=argv.resourceName%>.get({ id });
  }

  async update(id: TableIdentity, <%=argv.resourceName%>: Dto<%=argv.resourceNameCapitalize%>Update) {
    return await this.scope.model.<%=argv.resourceName%>.update({
      ...<%=argv.resourceName%>,
      id,
    });
  }

  async remove(id: TableIdentity) {
    return await this.scope.model.<%=argv.resourceName%>.delete({ id });
  }
}
