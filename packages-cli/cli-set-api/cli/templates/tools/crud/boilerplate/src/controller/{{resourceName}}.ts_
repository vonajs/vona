import type { TableIdentity } from 'vona-module-a-database';
import type { Dto<%=argv.resourceNameCapitalize%>Update } from '../dto/<%=argv.resourceName%>Update.ts';
import { BeanBase } from 'vona';
import { Api, Arg, v } from 'vona-module-a-openapi';
import { Controller, Web } from 'vona-module-a-web';
import { Dto<%=argv.resourceNameCapitalize%>Create } from '../dto/<%=argv.resourceName%>Create.ts';
import { Entity<%=argv.resourceNameCapitalize%> } from '../entity/<%=argv.resourceName%>.ts';

@Controller('<%=argv.resourceName%>')
export class Controller<%=argv.resourceNameCapitalize%> extends BeanBase {
  @Web.post()
  @Api.body(v.object(Entity<%=argv.resourceNameCapitalize%>))
  async create(@Arg.body() <%=argv.resourceName%>: Dto<%=argv.resourceNameCapitalize%>Create): Promise<Entity<%=argv.resourceNameCapitalize%>> {
    return await this.scope.service.<%=argv.resourceName%>.create(<%=argv.resourceName%>);
  }

  @Web.get()
  @Api.body(v.array(v.object(Entity<%=argv.resourceNameCapitalize%>)))
  async findAll(): Promise<Entity<%=argv.resourceNameCapitalize%>[]> {
    return await this.scope.service.<%=argv.resourceName%>.findAll();
  }

  @Web.get(':id')
  @Api.body(v.object(Entity<%=argv.resourceNameCapitalize%>))
  async findOne(@Arg.param('id') id: TableIdentity): Promise<Entity<%=argv.resourceNameCapitalize%>> {
    const <%=argv.resourceName%> = await this.scope.service.<%=argv.resourceName%>.findOne(id);
    if (!<%=argv.resourceName%>) this.app.throw(404);
    return <%=argv.resourceName%>;
  }

  @Web.patch(':id')
  async update(@Arg.param('id') id: TableIdentity, @Arg.body() <%=argv.resourceName%>: Dto<%=argv.resourceNameCapitalize%>Update) {
    return await this.scope.service.<%=argv.resourceName%>.update(id, <%=argv.resourceName%>);
  }

  @Web.delete(':id')
  async remove(@Arg.param('id') id: TableIdentity) {
    return await this.scope.service.<%=argv.resourceName%>.remove(id);
  }
}
