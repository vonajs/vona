import type { BootstrapOptionsMeta } from 'vona';
<%
function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

function getPascalFromSnake(input){
  return input.split("-").map(capitalizeFirstLetter).join("")
}

function getCamelFromSnake(input){
  const toReturn = getPascalFromSnake(input);
  return toReturn.charAt(0).toLowerCase() + toReturn.slice(1);
}
%>
const modules = {};

<% for (const relativeName in modules) {
    const module=modules[relativeName];
    const _package={
      version:module.package.version,
      title:module.package.title,
      description:module.package.description,
      author:module.package.author,
    };
    const importName=getCamelFromSnake(relativeName);
    const importClause=`modules['${module.info.relativeName}'] = { 
      resource: () => import('${module.info.fullName}'),
      name: '${module.info.relativeName}',
      info: ${JSON.stringify(module.info,null,2)},
      root: '${process.env.META_MODE==='prod'?'':module.root}',
      package: ${JSON.stringify(_package,null,2)},
    };`;
    print(importClause);
}%>
<%
const clause=`export const modulesMeta = { modules, moduleNames: ${JSON.stringify(moduleNames)} } as BootstrapOptionsMeta;`;
%>
<%=clause%>
