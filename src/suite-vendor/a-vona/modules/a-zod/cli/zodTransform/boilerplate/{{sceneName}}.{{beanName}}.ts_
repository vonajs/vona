import type { IDecoratorZodTransformOptions, IZodTransformExecute } from 'vona-module-a-zod';
import { BeanBase } from 'vona';
import { ZodTransform } from 'vona-module-a-zod';

export type TypeZodTransform<%=argv.beanNameCapitalize%>Data = unknown;

export type TypeZodTransform<%=argv.beanNameCapitalize%>Result = TypeZodTransform<%=argv.beanNameCapitalize%>Data;

export interface IZodTransformOptions<%=argv.beanNameCapitalize%> extends IDecoratorZodTransformOptions {}

@ZodTransform<IZodTransformOptions<%=argv.beanNameCapitalize%>>()
export class ZodTransform<%=argv.beanNameCapitalize%> extends BeanBase implements IZodTransformExecute<TypeZodTransform<%=argv.beanNameCapitalize%>Data, TypeZodTransform<%=argv.beanNameCapitalize%>Result> {
  async execute(_value: TypeZodTransform<%=argv.beanNameCapitalize%>Data, _options: IZodTransformOptions<%=argv.beanNameCapitalize%>): Promise<TypeZodTransform<%=argv.beanNameCapitalize%>Result> {}
}
