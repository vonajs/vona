import type { ICaptchaProviderData, ICaptchaProviderExecute, IDecoratorCaptchaProviderOptions } from 'vona-module-a-captcha';
import { BeanBase } from 'vona';
import { CaptchaProvider } from 'vona-module-a-captcha';

export type TypeCaptchaProvider<%=argv.beanNameCapitalize%>Token = any;
export type TypeCaptchaProvider<%=argv.beanNameCapitalize%>Payload = any;
export type TypeCaptchaProvider<%=argv.beanNameCapitalize%>Data = ICaptchaProviderData<TypeCaptchaProvider<%=argv.beanNameCapitalize%>Token, TypeCaptchaProvider<%=argv.beanNameCapitalize%>Payload>;

export interface ICaptchaProviderOptions<%=argv.beanNameCapitalize%> extends IDecoratorCaptchaProviderOptions {}

@CaptchaProvider<ICaptchaProviderOptions<%=argv.beanNameCapitalize%>>()
export class CaptchaProvider<%=argv.beanNameCapitalize%> extends BeanBase implements ICaptchaProviderExecute {
  async create(_options: ICaptchaProviderOptions<%=argv.beanNameCapitalize%>): Promise<TypeCaptchaProvider<%=argv.beanNameCapitalize%>Data> {
    throw new Error('Not Implemented');
  }

  async verify(_options: ICaptchaProviderOptions<%=argv.beanNameCapitalize%>): Promise<boolean> {
    return false;
  }
}
