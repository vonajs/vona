import type { IDecoratorSerializerTransformOptions, ISerializerTransform } from 'vona-module-a-serialization';
import { BeanBase } from 'vona';
import { SerializerTransform } from 'vona-module-a-serialization';

export type TypeSerializerTransform<%=argv.beanNameCapitalize%>Value = unknown;

export type TypeSerializerTransform<%=argv.beanNameCapitalize%>Data = unknown;

export type TypeSerializerTransform<%=argv.beanNameCapitalize%>Result = TypeSerializerTransform<%=argv.beanNameCapitalize%>Value;

export interface ISerializerTransformOptions<%=argv.beanNameCapitalize%> extends IDecoratorSerializerTransformOptions {}

@SerializerTransform<ISerializerTransformOptions<%=argv.beanNameCapitalize%>>()
export class SerializerTransform<%=argv.beanNameCapitalize%> extends BeanBase
  implements ISerializerTransform<
    TypeSerializerTransform<%=argv.beanNameCapitalize%>Value,
    TypeSerializerTransform<%=argv.beanNameCapitalize%>Data,
    TypeSerializerTransform<%=argv.beanNameCapitalize%>Result
  > {
  async transform(
    value: TypeSerializerTransform<%=argv.beanNameCapitalize%>Value,
    _data: TypeSerializerTransform<%=argv.beanNameCapitalize%>Data,
    _options: ISerializerTransformOptions<%=argv.beanNameCapitalize%>,
  ): Promise<TypeSerializerTransform<%=argv.beanNameCapitalize%>Result> {
    return value;
  }
}
