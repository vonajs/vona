import type { Next } from 'vona';
import type { IDecoratorFilterOptionsGlobal, IFilterLog } from 'vona-module-a-aspect';
import { BeanBase } from 'vona';
import { Filter } from 'vona-module-a-aspect';

export interface IFilterOptions<%=argv.beanNameCapitalize%> extends IDecoratorFilterOptionsGlobal {}

@Filter<IFilterOptions<%=argv.beanNameCapitalize%>>({ global: true })
export class Filter<%=argv.beanNameCapitalize%> extends BeanBase implements IFilterLog {
  async log(_err: Error, _options: IFilterOptions<%=argv.beanNameCapitalize%>, next: Next): Promise<boolean> {
    // next
    if ((await next()) === true) return true;
    return false;
  }
}
